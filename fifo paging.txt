#include <stdio.h>

#define MAX_FRAMES 10
#define MAX_REFERENCES 100

int main() {
    int frames[MAX_FRAMES], referenceString[MAX_REFERENCES];
    int frameCount, referenceCount, pageFaults = 0;
    int i, j, k, flag, currentIndex = 0;

    printf("Enter the number of frames: ");
    scanf("%d", &frameCount);

    printf("Enter the number of page references: ");
    scanf("%d", &referenceCount);

    printf("Enter the page reference string: ");
    for (i = 0; i < referenceCount; i++) {
        scanf("%d", &referenceString[i]);
    }

    // Initialize frames with -1 (indicating they are empty)
    for (i = 0; i < frameCount; i++) {
        frames[i] = -1;
    }

    // FIFO Paging algorithm
    for (i = 0; i < referenceCount; i++) {
        flag = 0;
        for (j = 0; j < frameCount; j++) {
            if (frames[j] == referenceString[i]) {
                flag = 1;  // Page found in frame
                break;
            }
        }

        if (flag == 0) {  // Page fault occurs
            frames[currentIndex] = referenceString[i];
            currentIndex = (currentIndex + 1) % frameCount;
            pageFaults++;
        }

        // Print current state of frames
        printf("Frames: ");
        for (k = 0; k < frameCount; k++) {
            if (frames[k] != -1)
                printf("%d ", frames[k]);
            else
                printf("_ ");
        }
        printf("\n");
    }

    printf("Total Page Faults: %d\n", pageFaults);

    return 0;
}

Input
Enter the number of frames: 3
Enter the number of page references: 8
Enter the page reference string: 1 3 0 3 5 6 3 1

Output
Frames: 1 _ _ 
Frames: 1 3 _ 
Frames: 1 3 0 
Frames: 1 3 0 
Frames: 5 3 0 
Frames: 5 6 0 
Frames: 5 6 3 
Frames: 1 6 3 
Total Page Faults: 7

